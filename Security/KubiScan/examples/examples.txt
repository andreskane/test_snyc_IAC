
Use 'python3 <path>/KubiScan.py' or run alias kubiscan='python3 <path>/KubiScan.py' and use 'kubiscan' to run.

# Get all risky Roles
python3 KubiScan.py --risky-roles
python3 KubiScan.py -rr
# all risky roles exist less than 100 days
python3 KubiScan.py -rr -lt 100

# With rules
python3 KubiScan.py -rr -r

# From remote
# kubiscan -ho <master_ip:master_port> -t <token_filename> -c <certificate_filename> -rr
SERVICE_TOKEN_FILENAME="/var/run/secrets/kubernetes.io/serviceaccount/token"
SERVICE_CERT_FILENAME="/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
kubiscan -ho 192.168.190.143:8443 -t $SERVICE_TOKEN_FILENAME -c $SERVICE_CERT_FILENAME -rr
It is possible to use only the token (without the certificate) and the SSL communication won't be verified:
kubiscan -ho 192.168.190.143:8443 -t $SERVICE_TOKEN_FILENAME -rr

# Get all risky ClusterRoles
python3 KubiScan.py --risky-clusterroles
python3 KubiScan.py -rcr
python3 KubiScan.py -rcr -lt 100

# With Rules
python3 KubiScan.py -rcr -r

# Get all risky Roles and ClusterRoles
python3 KubiScan.py --risky-any-roles
python3 KubiScan.py -rar
python3 KubiScan.py -rar -lt 100

# Get all risky RoleBindings
python3 KubiScan.py --risky-rolebindings
python3 KubiScan.py -rb
python3 KubiScan.py -rb -lt 100

# Get all risky ClusterRoleBindings
python3 KubiScan.py --risky-clusterrolebindings
python3 KubiScan.py -rcb
python3 KubiScan.py -rcb -lt 100

# Get all risky RoleBindings and ClusterRoleBindings
python3 KubiScan.py --risky-any-rolebindings
python3 KubiScan.py -rab
python3 KubiScan.py -rab -lt 100

# Get all risky Subjects (Users, Groups or Service Accounts)
python3 KubiScan.py --risky-subjects
python3 KubiScan.py -rs

# Get all risky Pods\Containers
python3 KubiScan.py --risky-pods
python3 KubiScan.py -rp

# Get all risky Roles\ClusterRoles, RoleBindings\ClusterRoleBindings, users and pods\containers
python3 KubiScan.py --all
python3 KubiScan.py -a
python3 KubiScan.py -a -lt 100

# Dump tokens from pod\pods
python3 KubiScan.py --dump-tokens
python3 KubiScan.py -dt
python3 KubiScan.py -dt -ns "kube-system"
python3 KubiScan.py -dt -n "nginx1" -ns "kube-system"

# Get associated RoleBindings\ClusterRoleBindings to a specific Role
python3 KubiScan.py --associated-any-rolebindings-role "system:controller:token-cleaner" -ns "kube-system"
python3 KubiScan.py -aarbr "system:controller:token-cleaner" -ns "kube-system"

# Get associated RoleBindings\ClusterRoleBindings to a specific ClusterRole
python3 KubiScan.py --associated-any-rolebindings-clusterrole "cluster-admin"
python3 KubiScan.py -aarbcr "cluster-admin"

# Get associated RoleBindings\ClusterRoleBindings to a specific Subject (user, group or service account)
python3 KubiScan.py --associated-any-rolebindings-subject "system:masters" -k "Group"
python3 KubiScan.py -aarbs "system:masters" -k "Group"

# Get associated Roles\ClusterRoles to a specific Subject (user, group or service account)
python3 KubiScan.py --associated-any-roles-subject "generic-garbage-collector" -k "ServiceAccount" -ns "kube-system"
python3 KubiScan.py -aars "generic-garbage-collector" -k "ServiceAccount" -ns "kube-system"

python3 KubiScan.py -aars "system:authenticated" -k "Group"

# List Subject (kind=Users)
python3 KubiScan.py --subject-users
python3 KubiScan.py -su

# List Subject (kind=Groups)
python3 KubiScan.py --subject-groups
python3 KubiScan.py -sg

# List Subject (kind=ServiceAccounts)
python3 KubiScan.py --subject-serviceaccounts
python3 KubiScan.py -ss

# List rules of RoleBinding
python3 KubiScan.py --rolebinding-rules "system:controller:token-cleaner" -ns "kube-system"
python3 KubiScan.py -rru "system:controller:token-cleaner" -ns "kube-system"

# List rules of ClusterRoleBinding
python3 KubiScan.py --clusterrolebinding-rules -crru "cluster-admin"
python3 KubiScan.py -crru "cluster-admin"

# Show Pods that has access to the secret data through a Volume
python3 KubiScan.py --pods-secrets-volume
python3 KubiScan.py -psv
python3 KubiScan.py -psv -ns "kube-system"

# Show Pods that has access to the secret data through environment variables
python3 KubiScan.py --pods-secrets-env
python3 KubiScan.py -pse
python3 KubiScan.py -pse -ns "kube-system"
